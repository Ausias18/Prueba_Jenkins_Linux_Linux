{
    "variables": {
        "client_id": "15055b44-7983-416f-823f-99c4e348dfe7",
        "client_secret": "7b7af9ec-d750-4ed0-9d2e-cb7a30ec3575",
        "tenant_id": "ece33831-9bc7-4217-a330-2082dfa1a525",
        "subscription_id": "2de9d718-d170-4e29-af3b-60c30e449b3c"
    },
    "builders": [
        {
            "type": "azure-arm",
            
            "client_id": "{{user `client_id`}}",
            "client_secret": "{{user `client_secret`}}",
            "tenant_id": "{{user `tenant_id`}}",
            "subscription_id": "{{user `subscription_id`}}",
            
            "managed_image_resource_group_name": "santalucia-imagenes-packer",
            "managed_image_name": "ws2016-winrm-packer",
            
            "os_type": "Windows",
            "image_publisher": "MicrosoftWindowsServer",
            "image_offer": "WindowsServer",
            "image_sku": "2016-Datacenter",
            "image_version": "latest",
            
            "disk_caching_type": "ReadWrite",
            
            "communicator": "winrm",
            "winrm_use_ssl": true,
            "winrm_insecure": true,
            "winrm_timeout": "15m",
            "winrm_username": "packer",
            
            "location": "West Europe",
            "vm_size": "Standard_A2_v2"
        }
    ],
    "provisioners": [{
    "type": "powershell",
    "inline": [
        "(Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1' -UseBasicParsing).content | Out-File $env:SystemDrive\\ConfigureRemotingForAnsible.ps1",
        "powershell.exe -ExecutionPolicy Unrestricted -file $env:SystemDrive\\.\\ConfigureRemotingForAnsible.ps1",
        "Add-WindowsFeature Web-Server",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit /mode:vm",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; Write-Output $imageState.ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Start-Sleep -s 10 } else { break } }"
         ]
        }]
    
}
